{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://volmit.com/iris-schema/iriscarving.json",
    "anyOf": [
        {
            "description": "Represents a carving configuration",
            "type": "object",
            "properties": {
                "caves": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscaveplacer"},
                    "description": "caves\nDefine cave placers\n   \nList of CavePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "ravines": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisravineplacer"},
                    "description": "ravines\nDefine ravine placers\n   \nList of RavinePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "elipsoids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriselipsoid"},
                    "description": "elipsoids\nDefine elipsoids\n   \nList of Elipsoids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "spheres": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irissphere"},
                    "description": "spheres\nDefine spheres\n   \nList of Spheres (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "pyramids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irispyramid"},
                    "description": "pyramids\nDefine pyramids\n   \nList of Pyramids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                }
            }
        },
        {"type": "string"}
    ],
    "definitions": {
        "obj-com-volmit-iris-engine-object-iriscaveplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "cave": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzcaves",
                        "description": "cave\nThe cave to place\n   \nIris Cave\n\n* Minimum Length allowed is 1\nMust be a valid caves (use ctrl+space for auto complete!)"
                    },
                    "breakSurface": {
                        "type": "boolean",
                        "description": "breakSurface\nIf set to true, this cave is allowed to break the surface\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "caveStartHeight": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriselipsoid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "xRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-engine-object-noisestyle": {"oneOf": [
            {
                "const": "STATIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BILINEAR",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BICUBIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_HERMITE",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "IRIS",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "CLOVER",
                "description": "Clover Noise"
            },
            {
                "const": "CLOVER_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BICUBIC",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "VASCULAR",
                "description": "Vascular noise gets higher as the position nears a cell border."
            },
            {
                "const": "FLAT",
                "description": "It always returns 0.5"
            },
            {
                "const": "CELLULAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BICUBIC",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "NOWHERE",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CELLULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CLOVER",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SIMPLEX",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_GLOB",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_VASCULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CUBIC",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SUPERFRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_FRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "IRIS_DOUBLE",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_THICK",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_HALF",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise."
            },
            {
                "const": "FRACTAL_SMOKE",
                "description": "Very Detailed smoke using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "VASCULAR_THIN",
                "description": "Thinner Veins."
            },
            {
                "const": "SIMPLEX_CELLS",
                "description": "Cells of simplex noise"
            },
            {
                "const": "SIMPLEX_VASCULAR",
                "description": "Veins of simplex noise"
            },
            {
                "const": "FRACTAL_WATER",
                "description": "Very Detailed fluid using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "PERLIN",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_HALF",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_DOUBLE",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_THICK",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise. 2 Octaves"
            },
            {
                "const": "FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_HALF",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_HALF",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_THICK",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_THICK",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. Single octave."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "BIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 2 octaves"
            },
            {
                "const": "TRIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 3 octaves"
            },
            {
                "const": "QUADOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 4 octaves"
            },
            {
                "const": "QUINTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 5 octaves"
            },
            {
                "const": "SEXOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 6 octaves"
            },
            {
                "const": "SEPTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 7 octaves"
            },
            {
                "const": "OCTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 8 octaves"
            },
            {
                "const": "NONOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 9 octaves"
            },
            {
                "const": "VIGOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 10 octaves"
            },
            {
                "const": "GLOB",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_HALF",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_DOUBLE",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_THICK",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "CUBIC",
                "description": "Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_THICK",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_HALF",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_DOUBLE",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "BIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 2 Octaves"
            },
            {
                "const": "TRIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 3 Octaves"
            },
            {
                "const": "QUADOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 4 Octaves"
            },
            {
                "const": "CUBIC_IRIS",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_HALF",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_DOUBLE",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_THICK",
                "description": "Cubic Noise"
            },
            {
                "const": "CELLULAR_IRIS",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_THICK",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_DOUBLE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_HALF",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_HEIGHT",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell"
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_DOUBLE",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_THICK",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_HALF",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "VASCULAR_IRIS",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_DOUBLE",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_THICK",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_HALF",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            }
        ]},
        "obj-com-volmit-iris-engine-object-irispyramid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "baseWidth": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irissphere": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "radius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisravineplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "ravine": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzravines",
                        "description": "ravine\nThe ravine to place\n   \nIris Ravine\n\n* Minimum Length allowed is 1\nMust be a valid ravines (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisgeneratorstyle": {"anyOf": [
            {
                "description": "A gen style",
                "type": "object",
                "properties": {
                    "style": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-noisestyle",
                        "description": "style\nThe chance is 1 in CHANCE per interval\n   \nNoiseStyle\nStyles of noise\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid NoiseStyle (use ctrl+space for auto complete!)"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "zoom\nThe zoom of this style\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "expression": {
                        "type": "string",
                        "$ref": "#/definitions/erzexpressions",
                        "description": "expression\nInstead of using the style property, use a custom expression to represent this style.\n   \nIris Expression\n\nMust be a valid expressions (use ctrl+space for auto complete!)"
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "multiplier\nThe Output multiplier. Only used if parent is fracture.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "axialFracturing": {
                        "type": "boolean",
                        "description": "axialFracturing\nIf set to true, each dimension will be fractured with a different order of input coordinates. This is usually 2 or 3 times slower than normal.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "fracture": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "exponent": {
                        "type": "number",
                        "minimum": 0.01562,
                        "maximum": 64,
                        "description": "exponent\nThe exponent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01562\n* Maximum allowed is 64.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzravines": {"enum": [
            "sandstone/main",
            "drip/main",
            "red-sandstone/small",
            "swamp/main",
            "rocky/main",
            "volcanic/small",
            "jungle/main",
            "red-sandstone/main",
            "simple/main",
            "deep/main",
            "sandstone/small",
            "amethyst/main",
            "simple/small",
            "volcanic/main",
            "drip/small",
            "calcite/small",
            "ice/main",
            "mixed-sandstone/main",
            "swamp/small",
            "calcite/main",
            "rocky/small",
            "mixed-sandstone/small"
        ]},
        "erzcaves": {"enum": [
            "sandstone/main",
            "drip/main",
            "swamp/main",
            "rocky/main",
            "jungle/main",
            "granite/small",
            "jungle/small",
            "red-sandstone/main",
            "sandstone/small",
            "drip/small",
            "calcite/small",
            "mixed-sandstone/main",
            "red-sandstone/small",
            "volcanic/small",
            "amethyst/small",
            "simple/main",
            "deep/main",
            "ice/small",
            "simple/small",
            "volcanic/main",
            "ice/main",
            "swamp/small",
            "calcite/main",
            "rocky/small",
            "mixed-sandstone/small"
        ]},
        "erzbiomes": {"enum": [
            "mountain/hills",
            "swamp/sea/ocean",
            "mushroom/forest",
            "mountain/middle",
            "ocean/shore/beach",
            "tropical/beach",
            "savanna/savanna",
            "tropical/rainforest-island",
            "mountain/shore/beach",
            "mushroom/plains",
            "temperate/highlands",
            "mesa/plateau",
            "tropical/highlands",
            "tundra/forest",
            "ocean/warm",
            "swamp/denmyre",
            "hot/shore/beach",
            "temperate/longtree-forest",
            "tropical/sea/river-steep",
            "tropical/volcanoes-lava",
            "mushroom/shore/beach",
            "temperate/lush-plains-yellow",
            "temperate/flower-forest",
            "tundra/taiga",
            "frozen/sea/ocean",
            "temperate/osaka-red-forest",
            "mesa/cliffs",
            "tundra/autumn",
            "mushroom/crimson-forest",
            "util/ruined_portals",
            "mesa/valleys",
            "tropical/sea/ocean",
            "hot/shore/beach-grass",
            "mesa/green",
            "mesa/shore/beach",
            "mountain/sea/river-soft",
            "subterrestrial-palette/swamp-cavern",
            "tropical/sea/coral-ocean-cliffs",
            "savanna/cliff",
            "tundra/forest-cliffs",
            "mountain/plains",
            "temperate/sea/ocean-deep",
            "temperate/lush-plains",
            "temperate/shore/beach",
            "frozen/vander",
            "mountain/cliffs",
            "frozen/spruce-plains",
            "savanna/forest",
            "subterrestrial-palette/granite-cavern",
            "tropical/rainforest",
            "subterrestrial-palette/red-sandstone-cavern",
            "hot/desert-dunes-red",
            "tundra/magic-forest",
            "subterrestrial-palette/sandstone-cavern",
            "hot/sea/ocean-cliffs",
            "tundra/mountains",
            "tropical/mountain",
            "tropical/mountain-plains",
            "tropical/volcanoes",
            "temperate/sea/ocean",
            "tundra/bonsai-forest",
            "temperate/shore/oak-beach",
            "mesa/dark",
            "tundra/shore/beach",
            "hot/sea/ocean",
            "mesa/blue",
            "subterrestrial-palette/calcite-cavern",
            "swamp/shore/beach",
            "mesa/yellow",
            "subterrestrial-palette/deepslate-cavern",
            "tropical/beach-charred",
            "tundra/shore/beach-stone",
            "frozen/mountains",
            "swamp/marsh-rotten",
            "frozen/sea/river",
            "savanna/shore/beach",
            "hot/mountain-plains",
            "tundra/mountains-cliffs",
            "mountain/forest",
            "tropical/mountain-extreme",
            "subterrestrial-palette/rocky-cavern",
            "temperate/stranged-plains",
            "tundra/sea/river-rocky",
            "mushroom/sea/ocean",
            "tropical/plains",
            "tropical/jungle-denmyre",
            "frozen/sea/frozen-parent-river",
            "subterrestrial-palette/drip-cavern-minimal",
            "frozen/shore/beach",
            "mushroom/sea/lake",
            "tundra/sea/river",
            "temperate/birch-denmyre",
            "tropical/mountain-water",
            "frozen/pine-hills",
            "tropical/beach-bamboo",
            "ocean/deep",
            "frozen/plains",
            "frozen/redwood-forest",
            "subterrestrial-palette/amethyst-cavern",
            "mesa/plateau-dirt-high",
            "mesa/red",
            "mountain/plain-hills",
            "subterrestrial-palette/drip-cavern",
            "swamp/marsh",
            "temperate/island",
            "tundra/redwood-cliffs",
            "tropical/rainforest-wicked",
            "temperate/lush-plains-red",
            "temperate/oak-forest",
            "temperate/birch-forest",
            "tropical/volcanic-plains",
            "tropical/plains-hills",
            "hot/desert-dunes",
            "subterrestrial-palette/jungle-cavern",
            "subterrestrial-palette/volcanic-cavern",
            "mountain/forest-hills",
            "temperate/meadows",
            "swamp/cambian-drift",
            "tropical/rainforest-hills",
            "subterrestrial-palette/ice-ravine",
            "tropical/rainforest-wicked-child",
            "swamp/sea/lake",
            "swamp/roofed-wayward",
            "temperate/birch-thin",
            "hot/mountain-middle",
            "mountain/mountain",
            "subterrestrial-palette/ice-cavern",
            "frozen/sea/frozen-river-ice",
            "temperate/plateau",
            "tropical/sea/river-soft",
            "mesa/plateau-high",
            "savanna/plateau",
            "frozen/pines",
            "temperate/combo-forest",
            "frozen/mountain",
            "temperate/sea/river",
            "mountain/sea/river",
            "hot/mountain",
            "mesa/plateau-dirt",
            "mushroom/forest-hills",
            "hot/mountain-cliffs",
            "temperate/osaka-violet-forest",
            "hot/oasis",
            "frozen/peak",
            "tropical/island-beach",
            "temperate/plains",
            "mushroom/warped-forest",
            "subterrestrial-palette/mixed-sandstone-cavern",
            "hot/sea/river",
            "temperate/wilds",
            "frozen/hills",
            "swamp/willow-forest",
            "frozen/pine-plains",
            "tropical/wilds",
            "tundra/ether",
            "mesa/mesa",
            "tropical/mountain-middle",
            "tundra/sea/lake",
            "frozen/mountain-cliffs",
            "swamp/sea/ocean-tree",
            "tundra/sequia-redwoods",
            "mountain/main",
            "ocean/ocean",
            "savanna/acacia-denmyre",
            "swamp/roofed-forest",
            "tundra/spruce-denmyre",
            "mesa/sea/river",
            "subterrestrial-palette/ice-cavern-minimal",
            "tropical/submerged-volcanic",
            "frozen/spruce-hills",
            "temperate/oak-denmyre",
            "tundra/redwood-forest",
            "ocean/warm-bottom",
            "tropical/bamboo-forest",
            "frozen/mountain-middle",
            "tropical/sea/coral-ocean"
        ]},
        "erzexpressions": {"enum": []},
        "enum-snippet-style": {"enum": []},
        "enum-snippet-style-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisstyledrange": {"anyOf": [
            {
                "description": "Represents a range styled with a custom generator",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
